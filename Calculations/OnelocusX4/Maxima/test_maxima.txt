batch("onelocusX4_maxima.txt");

pik2 : radcan(pik * nstates)$

radcan(pik2 . transpose(matrix([1,1,1,1,1,   1,1,1,1,1])));

dif : matrix(
[radcan(ev(pik2 - pi0, k=0))],
[radcan(ev(pik2 - pi0 . P, k=1))],
[radcan(ev(pik2 - pi0 . P^^k, k=2))],
[radcan(ev(pik2 - pi0 . P^^k, k=3))],
[radcan(ev(pik2 - pi0 . P^^k, k=4))],
[radcan(ev(pik2 - pi0 . P^^k, k=5))],
[radcan(ev(pik2 - pi0 . P^^k, k=6))],
[radcan(ev(pik2 - pi0 . P^^k, k=7))],
[radcan(ev(pik2 - pi0 . P^^k, k=8))],
[radcan(ev(pik2 - pi0 . P^^k, k=9))],
[radcan(ev(pik2 - pi0 . P^^k, k=10))],
[radcan(ev(pik2 - pi0 . P^^k, k=11))],
[radcan(ev(pik2 - pi0 . P^^k, k=12))],
[radcan(ev(pik2 - pi0 . P^^k, k=13))],
[radcan(ev(pik2 - pi0 . P^^k, k=14))],
[radcan(ev(pik2 - pi0 . P^^k, k=15))]
);


/***************/



phi : (1+sqrt(5))/4$
phib : (1-sqrt(5))/4$

D : matrix( 
       [-1/2, 0,   0,    0,   0,   0, 0, 0, 0, 0],
       [  0, 1/2,  0,    0,   0,   0, 0, 0, 0, 0],
       [  0,  0,  1/2,   0,   0,   0, 0, 0, 0, 0],
       [  0,  0,   0,  phib,  0,   0, 0, 0, 0, 0],
       [  0,  0,   0,    0,  phib, 0, 0, 0, 0, 0],
       [  0,  0,   0,    0,   0,  phi, 0, 0, 0, 0],
       [  0,  0,   0,    0,   0,   0, phi, 0, 0, 0],
       [  0,  0,   0,    0,   0,   0,  0, -1/4, 0, 0],
       [  0,  0,   0,    0,   0,   0,  0,   0 , 1, 0],
       [  0,  0,   0,    0,   0,   0,  0,   0 , 0, 1])$

Dk : matrix( 
       [(-1/2)^k, 0,   0,    0,   0,   0, 0, 0, 0, 0],
       [  0, (1/2)^k,  0,    0,   0,   0, 0, 0, 0, 0],
       [  0,  0,  (1/2)^k,   0,   0,   0, 0, 0, 0, 0],
       [  0,  0,   0,  (phib)^k,  0,   0, 0, 0, 0, 0],
       [  0,  0,   0,    0,  (phib)^k, 0, 0, 0, 0, 0],
       [  0,  0,   0,    0,   0,  (phi)^k, 0, 0, 0, 0],
       [  0,  0,   0,    0,   0,   0, (phi)^k, 0, 0, 0],
       [  0,  0,   0,    0,   0,   0,  0, (-1/4)^k, 0, 0],
       [  0,  0,   0,    0,   0,   0,  0,   0 , 1, 0],
       [  0,  0,   0,    0,   0,   0,  0,   0 , 0, 1])$

v : transpose(matrix(
   [0, 0, 1, 0, 1, -1/2, -1/2, 1/2, -1, 0],
   [0, 0, 1, 0, 0,  1/2, -1/2,-1/2, -1, 0],
   [0, 0, 0, 0, 1,   0,    1,   0,   0, 0],
   [0, 1, 0, phib, -phi,   0,  1/2,  0, 0, 0],
   [0, 0, 1, 0, 1, phib, phib, phib, 1, 0],
   [0, 1, 0, phi, -phib, 0, 1/2, 0, 0, 0],
   [0, 0, 1, 0, 1, phi, phi, phi, 1, 0],
   [0, 0, 0, 0, 1, 0, -1/2, 0, 0, 0],
   [1, 1, 0, 1, 0, 0, 0, -1, -1, -2],
   [0, 0, 1, 0, 1, 1, 1, 2, 2, 3]))$


vinv : transpose(matrix(
[1/12, -1/4, 1/4, -(5-3*sqrt(5))/10, -(5-3*sqrt(5))/20, -(5+3*sqrt(5))/10, -(5+3*sqrt(5))/20, 0, 1, 2/3],
[0, 0, -1/6, (5+sqrt(5))/10, 0, (5-sqrt(5))/10, 0, 2/3, 0, 0],
[1/4, 1/4, -1/12, 0, (5+sqrt(5))/20, 0, (5-sqrt(5))/20, -2/3, 0, 0],
[0, 0, -1/3, -2*sqrt(5)/5, 0, 2*sqrt(5)/5, 0, -2/3, 0, 0],
[0, 0, 1/3, 0, 0,   0, 0, 2/3, 0, 0],
[-1/2, 1/2, -1/6, 0, -sqrt(5)/5, 0, sqrt(5)/5, 2/3, 0, 0],
[0, 0, 2/3, 0, 0,    0, 0, -2/3, 0, 0],
[1/2, -1/2, -1/2, 0, -sqrt(5)/5,    0, sqrt(5)/5, 0, 0, 0],
[-1/4, -1/4, -1/4, 0,  (5+sqrt(5))/20, 0, (5-sqrt(5))/20, 0, 0, 0],
[-1/12, 1/4, 1/4, 0, -(5-3*sqrt(5))/20, 0, -(5+3*sqrt(5))/20, 0, 0, 1/3]))$

radcan(v . vinv);

radcan(P - v . D . vinv);


/*male A */ radcan((pi0 . v . Dk . vinv).transpose(matrix([1, 1, 0, 1, 0, 1, 1, 0, 1, 0]))/2);
/*male C */ radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 0, 1, 0, 1, 0, 0, 1, 0, 1])));

/* female AA */ pAA : radcan((pi0 . v . Dk . vinv).transpose(matrix([1, 1, 1, 0, 0, 0, 0, 0, 0, 0]))/2);
/* female AB */ pAB : radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 0, 0, 1, 1, 0, 0, 0, 0, 0])));
/* female AC */ pAC : radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 0, 0, 0, 0, 1, 1, 1, 0, 0]))/2);
/* female CC */ pCC : radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 0, 0, 0, 0, 0, 0, 0, 1, 1])));
