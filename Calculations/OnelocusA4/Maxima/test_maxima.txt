batch("onelocusA4_maxima.txt");

pik2 : radcan(pik * nstates)$

radcan(pik2 . transpose(matrix([1,1,1,  1,1,1,1,1,   1,1,1,1,1])));

dif : matrix(
[radcan(ev(pik2 - pi0, k=0))],
[radcan(ev(pik2 - pi0 . P, k=1))],
[radcan(ev(pik2 - pi0 . P^^k, k=2))],
[radcan(ev(pik2 - pi0 . P^^k, k=3))],
[radcan(ev(pik2 - pi0 . P^^k, k=4))],
[radcan(ev(pik2 - pi0 . P^^k, k=5))],
[radcan(ev(pik2 - pi0 . P^^k, k=6))],
[radcan(ev(pik2 - pi0 . P^^k, k=7))],
[radcan(ev(pik2 - pi0 . P^^k, k=8))],
[radcan(ev(pik2 - pi0 . P^^k, k=9))],
[radcan(ev(pik2 - pi0 . P^^k, k=10))],
[radcan(ev(pik2 - pi0 . P^^k, k=11))],
[radcan(ev(pik2 - pi0 . P^^k, k=12))],
[radcan(ev(pik2 - pi0 . P^^k, k=13))],
[radcan(ev(pik2 - pi0 . P^^k, k=14))],
[radcan(ev(pik2 - pi0 . P^^k, k=15))]
);

/***********/


phi : (1+sqrt(5))/4$
phib : (1-sqrt(5))/4$

D : matrix( 
       [-1/4, 0,   0,    0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0, -1/8,  0,    0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,  -1/8,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   1/4,  0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  1/4,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   1/4, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   0, 1/4, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   0,  0,  1/2, 0, 0, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, phib, 0, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0,   phib, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, phi, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, 0, phi, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, 0, 0, 1])$

Dk : matrix( 
       [(-1/4)^k, 0,   0,    0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0, (-1/8)^k,  0,    0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,  (-1/8)^k,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   (1/4)^k,  0,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  (1/4)^k,   0, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   (1/4)^k, 0, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   0, (1/4)^k, 0, 0, 0, 0, 0, 0],
       [  0,  0,   0,   0,  0,   0,  0,  (1/2)^k, 0, 0, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, (phib)^k, 0, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0,   (phib)^k, 0, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, (phi)^k, 0, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, 0, (phi)^k, 0], 
       [  0,  0,   0,   0,  0,   0,  0,  0, 0, 0, 0, 0, 1])$

v : transpose(matrix(
   [0, 0, 0,  0, 1,     0, -2,  0, -1/2, -4,     0,   1,    2],
   [0, 0, 0,  0, 1,     0,  1,  0, -1/4,  0,     0, -1/4, 1/2],
   [0, 0, 0,  0, 0,     0,  0,  0,   0,   1,     0,   0, -1/2],
   [0, 1, 0, -4, 0,     0, -1, -1,  1/2,  0,     0, -1/2,   1],
   [0, 0, 1,  0, 0,    -4, -2,  0,  1/2,  0,    -1,   0,    1],

   [0, 0, 0,  0, 1,     0, -2,  0,  1/2,  0,     0,  -1,    2],
   [0, 0, 0,  0, 0,     0,  0,  0,    0,  1,     0,   0,    1],
   [0, 0, 0,  0, 1,     0,  1,  0,    1,  2,     0,   1,    2],

   [0, 1, 0, 6+2*sqrt(5), 3+sqrt(5), 
    0, -2-sqrt(5), -1-sqrt(5), -(1+sqrt(5))/2, -2*(2+sqrt(5)), 
    0, (3+sqrt(5))/2, 3+sqrt(5)],

   [0, 0, 1, 0, 1, 
    6+2*sqrt(5), 6+2*sqrt(5), 0, 1, 6+2*sqrt(5),
   -1-sqrt(5), -1-sqrt(5), -1-sqrt(5)],

   [0, 1, 0, 6-2*sqrt(5), 3-sqrt(5), 
    0, -2+sqrt(5), -1+sqrt(5), (-1+sqrt(5))/2, -4+2*sqrt(5), 
    0, (3-sqrt(5))/2, 3-sqrt(5)],

   [0, 0, 1, 0, 1, 
    6-2*sqrt(5), 6-2*sqrt(5), 0, 1, 6-2*sqrt(5), 
    -1+sqrt(5), -1+sqrt(5),-1+sqrt(5)],

    [1,1,1,1,1,   1,1,1,1,1,   1,1,1]))$


vinv : radcan(invert(radcan(v)))$

radcan(P - v . D . vinv);


/* AA */ pAA : radcan((pi0 . v . Dk . vinv).transpose(matrix([1, 1/2, 1/2, 1/2, 1/2, 1/2, 1/2, 0, 0, 0, 0, 0, 0]))/4);
/* AB */ pAB : radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 1/2,  0,   0,   0,   0,   0,  1, 1/2, 1/2, 0, 0, 0]))/2);
/* AC */ pAC : radcan((pi0 . v . Dk . vinv).transpose(matrix([0, 0, 1/2, 0, 0, 0, 0, 0, 1/2, 0, 1, 1/2, 1/2]))/4);
